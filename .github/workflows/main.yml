name: Build and Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  unit-tests:
    name: Static Analysis and Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format:check

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run ci-test

      - name: Check package is up to date
        run: |
          npm run bundle
          OUTPUT=$(git diff -- dist | wc --chars)
          if [[ "${OUTPUT}" -ne "0" ]]; then
            echo "::error::package files are not up to date"
            exit 1
          fi

  action-tests:
    name: '${{ matrix.name }} (${{ matrix.runner }})'
    strategy:
      matrix:
        include:
          - name: default
            runner: ubuntu-latest
            cache: true

          - name: default
            runner: macos-latest
            cache: true

          - name: default
            runner: windows-latest
            cache: true

          - name: install config
            runner: ubuntu-latest
            config: '.github/workflows/config'
            cache: true
            test: true

          - name: install config
            runner: macos-latest
            config: '.github/workflows/config'
            cache: true
            test: true

          - name: install config
            runner: windows-latest
            config: '.github/workflows/config'
            cache: true
            test: true

          - name: cache key with timestamp
            runner: ubuntu-latest
            append-timestamp: true
            cache: true

          - name: cache key with lockfile
            runner: ubuntu-latest
            cache: true
            lockfile: .github/conan.lock

          - name: cache key with explicit profile
            runner: ubuntu-latest
            cache: true
            host-profiles: |
              .github/custom_profile

          - name: cache disabled
            runner: ubuntu-latest
            cache: false

          - name: install latest version
            runner: ubuntu-latest
            cache: true
            version: latest

          - name: install specific version
            runner: ubuntu-latest
            cache: true
            version: 2.12.1

    runs-on: ${{ matrix.runner }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
          cache-dependency-path: '.github/requirements.txt'

      - name: Install pytest
        run: pip install pytest

      - name: Run conan setup action
        uses: ./
        with:
          config: ${{ matrix.config }}
          append-timestamp: ${{ matrix.append-timestamp == true }}
          cache: ${{ matrix.cache }}
          lockfile: ${{ matrix.lockfile }}
          host-profiles: ${{ matrix.host-profiles }}
          version: ${{ matrix.version || 'auto' }}

      - name: Run tests
        if: matrix.test != ''
        run: |
          pytest integration_tests

      - name: Install packages
        run: |
          conan install .github --build missing

  action-tests-error:
    name: 'error: ${{ matrix.name }}'

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        include:
          - name: nonexistent lockfile
            append-timestamp: false
            lockfile: conan.lock

          - name: nonexistent host profile
            append-timestamp: false
            host-profiles: |
              not_a_profile

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
          cache-dependency-path: '.github/requirements.txt'

      - name: Install conan
        run: |
          pip install pytest

      - name: Run conan setup action
        id: action_run
        continue-on-error: true
        uses: ./
        with:
          lockfile: ${{ matrix.lockfile }}
          host-profiles: ${{ matrix.host-profiles }}

      - name: Verify failure
        run: |
          if [[ "${{ steps.action_run.outcome }}" != "failure" ]]; then
            echo "::error action was expected to fail"
            exit 1
          fi

  container-action-tests:
    name: '${{ matrix.name }} (container)'
    strategy:
      matrix:
        include:
          - name: default
            append-timestamp: false

          - name: install config
            config: '.github/workflows/config'
            append-timestamp: false
            test: true

          - name: cache key with timestamp
            append-timestamp: true

          - name: cache key with lockfile
            append-timestamp: false
            lockfile: .github/conan.lock

          - name: cache key with explicit profile
            append-timestamp: false
            host-profiles: |
              .github/custom_profile

    runs-on: ubuntu-latest
    container: python:3.13

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install prerequisites
        run: |
          apt-get update -y
          apt-get install -y \
            cmake

      - name: Install pytest
        run: pip install pytest

      - name: Run conan setup action
        uses: ./
        with:
          config: ${{ matrix.config }}
          append-timestamp: ${{ matrix.append-timestamp }}
          lockfile: ${{ matrix.lockfile }}
          host-profiles: ${{ matrix.host-profiles }}

      - name: Run tests
        if: matrix.test != ''
        run: |
          pytest integration_tests

      - name: Install packages
        run: |
          conan install .github --build missing
